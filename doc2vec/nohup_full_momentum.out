string price: 1.8591981136572546
string price: 1.2885263121198216
string price: 1.0773845281177161
string price: 1.121257804323449
string price: 8.965153219298495
string price: 1.2990684024571935
string price: 9.064884734018875
string price: 2.006564011672051
string price: 2.3335508561398757
string price: 2.3359429007602555
string price: 2.3359429007602555
string price: 2.3359429007602555
string price: 1.2591215623738339
string price: 1.2787003960170784
string price: 6.266887232538808
string price: 1.5002095829715556
dataset_size = 66273
labels len = 66273
experiment starting with estimators=[('price_history', Pipeline(memory=None,
     steps=[('selector', CustomDictVectorizer(key='price_history'))])), ('clf', XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
       colsample_bytree=1, gamma=0, learning_rate=0.1, max_delta_step=0,
       max_depth=3, min_child_weight=1, missing=None, n_estimators=300,
       n_jobs=1, nthread=1, objective='multi:softmax', random_state=0,
       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=None,
       silent=True, subsample=1))] param_dict={'clf__subsample': array([ 0.5,  0.6,  0.7,  0.8,  0.9]), 'clf__max_depth': array([3, 4, 5, 6, 7, 8, 9]), 'clf__min_child_weight': array([3, 4, 5, 6, 7, 8, 9]), 'clf__colsample_bytree': array([ 0.5,  0.6,  0.7,  0.8,  0.9])}
66273
66273
Top 3 lines
#1: joblib/numpy_pickle.py:108: 25918.8 KiB
    array = pickle.load(unpickler.file_handle)
#2: python3.5/pickle.py:1039: 8.3 KiB
    dispatch[key[0]](self)
#3: tf_idf_v2.py:29: 4.7 KiB
    path, prices, labels = path_prices_labels.split(';')
109 other: 61.1 KiB
Total allocated size: 25992.9 KiB
Total running time: 265.72376585006714
{'param_clf__subsample': masked_array(data = [0.69999999999999996 0.69999999999999996 0.59999999999999998
 0.69999999999999996 0.69999999999999996 0.80000000000000004 0.5
 0.59999999999999998 0.80000000000000004 0.69999999999999996],
             mask = [False False False False False False False False False False],
       fill_value = ?)
, 'mean_score_time': array([ 1.312904  ,  1.43743165,  1.04815695,  0.85924103,  1.32473617,
        0.95297053,  1.56416597,  1.08549678,  1.02827876,  0.79194591]), 'split5_train_score': array([ 0.76693497,  0.75874755,  0.62285288,  0.51752275,  0.6879927 ,
        0.52031643,  0.76798606,  0.5434957 ,  0.54012115,  0.51544823]), 'split1_test_score': array([ 0.39077025,  0.38512616,  0.38711819,  0.39707835,  0.39442231,
        0.40454847,  0.38296813,  0.39956839,  0.39774236,  0.40205843]), 'split9_test_score': array([ 0.3877822 ,  0.38695219,  0.39475432,  0.40073041,  0.39309429,
        0.40355246,  0.38927623,  0.40056441,  0.40172643,  0.40737052]), 'split2_test_score': array([ 0.38545817,  0.38894422,  0.39624834,  0.40438247,  0.38877822,
        0.39608234,  0.38014608,  0.39442231,  0.40039841,  0.39658035]), 'split5_test_score': array([ 0.39409031,  0.40338645,  0.3937583 ,  0.40903054,  0.40239044,
        0.40720452,  0.39890438,  0.40338645,  0.41035857,  0.40753652]), 'split7_test_score': array([ 0.41334661,  0.40919655,  0.41533865,  0.42214475,  0.41533865,
        0.42114874,  0.40504648,  0.41318061,  0.41450863,  0.41998672]), 'split8_test_score': array([ 0.38512616,  0.3811421 ,  0.38861222,  0.38994024,  0.3874502 ,
        0.38927623,  0.38462815,  0.39043825,  0.39160027,  0.39010624]), 'std_train_score': array([ 0.09102643,  0.08583158,  0.08743556,  0.06723527,  0.09719823,
        0.06873414,  0.07744497,  0.06718992,  0.06608344,  0.06695212]), 'split4_train_score': array([ 0.80643234,  0.79753726,  0.6400146 ,  0.53128215,  0.71625344,
        0.53267616,  0.79654154,  0.56085499,  0.56314514,  0.5286269 ]), 'rank_test_score': array([ 8,  9,  6,  2,  7,  1, 10,  5,  4,  3], dtype=int32), 'split9_train_score': array([ 0.69323972,  0.69138077,  0.56867334,  0.48664708,  0.62362861,
        0.48935252,  0.69811947,  0.5127388 ,  0.50943584,  0.49049777]), 'mean_fit_time': array([ 40.94058409,  31.27477176,  34.303176  ,  25.29420719,
        31.45625136,  27.54433012,  44.47536893,  23.52131143,
        22.59222293,  23.26237106]), 'param_clf__colsample_bytree': masked_array(data = [0.90000000000000002 0.5 0.90000000000000002 0.59999999999999998
 0.69999999999999996 0.80000000000000004 0.90000000000000002 0.5 0.5
 0.80000000000000004],
             mask = [False False False False False False False False False False],
       fill_value = ?)
, 'split3_train_score': array([ 0.83439121,  0.8181705 ,  0.66621033,  0.54913918,  0.74694047,
        0.55295582,  0.82016179,  0.58083385,  0.5790085 ,  0.55017631]), 'split4_test_score': array([ 0.41600266,  0.41002656,  0.42314077,  0.44073705,  0.42048473,
        0.437749  ,  0.39691235,  0.437583  ,  0.43310093,  0.43658699]), 'param_clf__max_depth': masked_array(data = [8 9 6 4 7 4 9 5 5 4],
             mask = [False False False False False False False False False False],
       fill_value = ?)
, 'split0_test_score': array([ 0.37267596,  0.37217795,  0.37898406,  0.38911023,  0.37549801,
        0.39160027,  0.37118194,  0.38512616,  0.39259628,  0.38927623]), 'mean_train_score': array([ 0.80426667,  0.79645527,  0.65837869,  0.54923072,  0.72924903,
        0.55280844,  0.79487727,  0.57676336,  0.57449214,  0.5496231 ]), 'std_test_score': array([ 0.01375155,  0.01239395,  0.01433075,  0.01550269,  0.01388326,
        0.01445845,  0.01148768,  0.01485129,  0.01232791,  0.01418098]), 'param_clf__min_child_weight': masked_array(data = [4 5 6 3 4 3 8 7 9 4],
             mask = [False False False False False False False False False False],
       fill_value = ?)
, 'split8_train_score': array([ 0.70666667,  0.70701706,  0.57947441,  0.49447672,  0.63282619,
        0.49580452,  0.71085293,  0.51876441,  0.51703089,  0.49414477]), 'std_fit_time': array([ 24.9066392 ,  16.8279312 ,  19.09995942,  14.867751  ,
        16.6506978 ,  14.32656262,  23.03170046,  12.58326677,
        11.68561518,  11.44208364]), 'params': [{'clf__subsample': 0.69999999999999996, 'clf__max_depth': 8, 'clf__min_child_weight': 4, 'clf__colsample_bytree': 0.90000000000000002}, {'clf__subsample': 0.69999999999999996, 'clf__max_depth': 9, 'clf__min_child_weight': 5, 'clf__colsample_bytree': 0.5}, {'clf__subsample': 0.59999999999999998, 'clf__max_depth': 6, 'clf__min_child_weight': 6, 'clf__colsample_bytree': 0.90000000000000002}, {'clf__subsample': 0.69999999999999996, 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'clf__colsample_bytree': 0.59999999999999998}, {'clf__subsample': 0.69999999999999996, 'clf__max_depth': 7, 'clf__min_child_weight': 4, 'clf__colsample_bytree': 0.69999999999999996}, {'clf__subsample': 0.80000000000000004, 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'clf__colsample_bytree': 0.80000000000000004}, {'clf__subsample': 0.5, 'clf__max_depth': 9, 'clf__min_child_weight': 8, 'clf__colsample_bytree': 0.90000000000000002}, {'clf__subsample': 0.59999999999999998, 'clf__max_depth': 5, 'clf__min_child_weight': 7, 'clf__colsample_bytree': 0.5}, {'clf__subsample': 0.80000000000000004, 'clf__max_depth': 5, 'clf__min_child_weight': 9, 'clf__colsample_bytree': 0.5}, {'clf__subsample': 0.69999999999999996, 'clf__max_depth': 4, 'clf__min_child_weight': 4, 'clf__colsample_bytree': 0.80000000000000004}], 'std_score_time': array([ 0.19921443,  0.20013215,  0.1913659 ,  0.10981004,  0.12793821,
        0.12280101,  0.13031391,  0.10137835,  0.08727346,  0.04238051]), 'split6_train_score': array([ 0.74211063,  0.74156531,  0.59873865,  0.50603409,  0.66201958,
        0.50873699,  0.74305901,  0.53242288,  0.53232805,  0.50667425]), 'split0_train_score': array([ 0.97696005,  0.96469418,  0.85595889,  0.71357534,  0.93668158,
        0.72103431,  0.9454666 ,  0.73495773,  0.7288248 ,  0.71274656]), 'mean_test_score': array([ 0.39561753,  0.39407371,  0.3997344 ,  0.40823373,  0.39933599,
        0.40831673,  0.39045485,  0.40531208,  0.40697211,  0.40780212]), 'split2_train_score': array([ 0.87600243,  0.86361374,  0.70632155,  0.57541065,  0.79354018,
        0.57695924,  0.84973176,  0.60837343,  0.6031746 ,  0.57778884]), 'split7_train_score': array([ 0.72154105,  0.72010954,  0.58556876,  0.49907678,  0.64737246,
        0.50438788,  0.72641646,  0.52403477,  0.52218834,  0.5001556 ]), 'split1_train_score': array([ 0.91838766,  0.90171684,  0.75997346,  0.61914241,  0.84523513,
        0.6258605 ,  0.89043709,  0.651157  ,  0.6496641 ,  0.6199718 ]), 'split3_test_score': array([ 0.39707835,  0.39741036,  0.39790837,  0.40521248,  0.39840637,
        0.40853254,  0.38512616,  0.4063745 ,  0.40770252,  0.4060425 ]), 'split6_test_score': array([ 0.41384462,  0.4063745 ,  0.42148074,  0.42397078,  0.41749668,
        0.42347278,  0.41035857,  0.42247676,  0.41998672,  0.42247676])}
[mean: 0.39562, std: 0.01375, params: {'clf__subsample': 0.69999999999999996, 'clf__max_depth': 8, 'clf__min_child_weight': 4, 'clf__colsample_bytree': 0.90000000000000002}, mean: 0.39407, std: 0.01239, params: {'clf__subsample': 0.69999999999999996, 'clf__max_depth': 9, 'clf__min_child_weight': 5, 'clf__colsample_bytree': 0.5}, mean: 0.39973, std: 0.01433, params: {'clf__subsample': 0.59999999999999998, 'clf__max_depth': 6, 'clf__min_child_weight': 6, 'clf__colsample_bytree': 0.90000000000000002}, mean: 0.40823, std: 0.01550, params: {'clf__subsample': 0.69999999999999996, 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'clf__colsample_bytree': 0.59999999999999998}, mean: 0.39934, std: 0.01388, params: {'clf__subsample': 0.69999999999999996, 'clf__max_depth': 7, 'clf__min_child_weight': 4, 'clf__colsample_bytree': 0.69999999999999996}, mean: 0.40832, std: 0.01446, params: {'clf__subsample': 0.80000000000000004, 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'clf__colsample_bytree': 0.80000000000000004}, mean: 0.39045, std: 0.01149, params: {'clf__subsample': 0.5, 'clf__max_depth': 9, 'clf__min_child_weight': 8, 'clf__colsample_bytree': 0.90000000000000002}, mean: 0.40531, std: 0.01485, params: {'clf__subsample': 0.59999999999999998, 'clf__max_depth': 5, 'clf__min_child_weight': 7, 'clf__colsample_bytree': 0.5}, mean: 0.40697, std: 0.01233, params: {'clf__subsample': 0.80000000000000004, 'clf__max_depth': 5, 'clf__min_child_weight': 9, 'clf__colsample_bytree': 0.5}, mean: 0.40780, std: 0.01418, params: {'clf__subsample': 0.69999999999999996, 'clf__max_depth': 4, 'clf__min_child_weight': 4, 'clf__colsample_bytree': 0.80000000000000004}]/usr/local/lib/python3.5/dist-packages/sklearn/model_selection/_search.py:761: DeprecationWarning: The grid_scores_ attribute was deprecated in version 0.18 in favor of the more elaborate cv_results_ attribute. The grid_scores_ attribute will not be available from 0.20
  DeprecationWarning)

{'clf__subsample': 0.80000000000000004, 'clf__max_depth': 4, 'clf__min_child_weight': 3, 'clf__colsample_bytree': 0.80000000000000004}
0.408316733068
